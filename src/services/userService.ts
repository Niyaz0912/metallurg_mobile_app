import api from './api';
import { User } from '../types/auth';

export const getUsers = async (): Promise<User[]> => {
  try {
    const response = await api.get('/api/users');
    return response.data;
  } catch (error) {
    console.error('Failed to fetch users:', error);
    throw error;
  }
};

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getCurrentUserProfile = async (): Promise<User> => {
  try {
    console.log('üîç Fetching current user profile...');
    const response = await api.get('/api/users/me');
    console.log('üìã Raw API response:', response.data);
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç { user: {...} }
    if (response.data.user) {
      console.log('‚úÖ User data extracted from response:', response.data.user);
      return response.data.user;
    } else {
      console.error('‚ùå No user field in response:', response.data);
      throw new Error('Invalid response format from server');
    }
  } catch (error) {
    console.error('‚ùå Failed to fetch current user profile:', error);
    throw error;
  }
};

// –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ ID (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
export const getUserProfile = async (userId: number): Promise<User> => {
  try {
    console.log(`üîç Fetching user profile for userId: ${userId}`);
    const response = await api.get(`/api/users/${userId}/profile`);
    console.log('üìã User profile response:', response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Failed to fetch user profile for userId ${userId}:`, error);
    throw error;
  }
};
